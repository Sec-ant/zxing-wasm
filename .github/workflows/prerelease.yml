name: Prerelease

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  pull-requests: write
  contents: write

env:
  EM_VERSION: 3.1.52
  EM_CACHE_FOLDER: ".emsdk-cache"

jobs:
  prerelease:
    runs-on: ubuntu-latest
    steps:
      - name: Get PR Number
        id: get-pr-number
        uses: mgaitan/gha-get-pr-number@main

      - name: Build Start Dispatch
        uses: peter-evans/repository-dispatch@v2
        with:
          event-type: build-start
          client-payload: '{ "pr-number": ${{ steps.get-pr-number.outputs.number }} }'

      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc

      - name: Setup System Libraries Cache
        id: cache-system-libraries
        uses: actions/cache@v4
        with:
          path: ${{ env.EM_CACHE_FOLDER }}
          key: ${{ env.EM_VERSION }}-${{ runner.os }}

      - name: Setup EMSDK
        uses: mymindstorm/setup-emsdk@v14
        with:
          version: ${{ env.EM_VERSION }}
          actions-cache-folder: ${{ env.EM_CACHE_FOLDER }}

      - name: Get Commit ID
        id: get-commit-id
        run: |
          echo "short-commit-id=$(git rev-parse --short ${{ github.event.pull_request.head.sha }})" >> $GITHUB_OUTPUT
          echo "commit-id=$(git rev-parse ${{ github.event.pull_request.head.sha }})" >> $GITHUB_OUTPUT

      - name: Patch package.json
        run: npm pkg set version=${{ steps.get-commit-id.outputs.short-commit-id }}

      - name: Install Dependencies
        run: npm ci

      - name: Build and Pack
        run: |
          npm run build:all
          npm pack

      - name: Release
        id: release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "zxing-wasm-${{ steps.get-commit-id.outputs.short-commit-id }}.tgz"
          artifactContentType: application/gzip
          body: "This is a prerelease of zxing-wasm: ${{ steps.get-commit-id.outputs.short-commit-id }} from #${{ steps.get-pr-number.outputs.number }}."
          commit: ${{ steps.get-commit-id.outputs.commit-id }}
          tag: "pr-${{ steps.get-pr-number.outputs.number }}"
          prerelease: true
          name: "pr-${{ steps.get-pr-number.outputs.number }}"
          removeArtifacts: true

      - name: Get Release URL
        id: release-url
        uses: frabert/replace-string-action@v2
        with:
          pattern: "^(.+?/releases/)tag(/.+?)$"
          string: ${{ steps.release.outputs.html_url }}
          replace-with: "$1download$2/zxing-wasm-${{ steps.get-commit-id.outputs.short-commit-id }}.tgz"

      - name: Build Finish Dispatch
        uses: peter-evans/repository-dispatch@v2
        with:
          event-type: build-finish
          client-payload: '{ "release-url": "${{ steps.release-url.outputs.replaced }}", "pr-number": ${{ steps.get-pr-number.outputs.number }} }'

      - name: Clean Up
        if: failure()
        uses: peter-evans/repository-dispatch@v2
        with:
          event-type: build-fail
          client-payload: '{ "pr-number": ${{ steps.get-pr-number.outputs.number }} }'
